server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      # 通过服务名实现路由
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由

      routes:

         # bean 配置 玩法
        #        - id: path_route_atguigu   # payment_routh #payment_route # 路由的ID 没有固定规则，但要求唯一，建议配合服务名。
        #          uri: http://localhost:8001  # 匹配后提供服务的路由地址。
        #         predicates:
        #             - Path=/payment/get/**  # 断言，路径想匹配的进行路由。
        #        - id: path_route_guoji   # payment_routh #payment_route # 路由的ID 没有固定规则，但要求唯一，建议配合服务名。
        #          uri: http://localhost:8001  # 匹配后提供服务的路由地址。
        #          predicates:
        #             - Path=/payment/lb/**  # 断言，路径想匹配的进行路由。
        #####

        # 通过服务名实现动态路由
        - id: payment_routh   #payment_route # 路由的ID 没有固定规则，但要求唯一，建议配合服务名。
         # uri: http://localhost:8001  # 匹配后提供服务的路由地址。
          uri: lb://cloud-payment-service  # 匹配后提供服务的路由地址。
          predicates:
            - Path=/payment/get/**  # 断言，路径想匹配的进行路由。
              # 在这个时间之后才能访问 /lb/ 下的路径
           # - After=2020-08-15T14:31:40.554+08:00[Asia/Shanghai]
              #   在这个时间之后才能访问 /lb/ 下的路径
            #  - Before=2020-08-15T14:34:43.132+08:00[Asia/Shanghai]
              #   在这个时间之间才能访问 /lb/ 下的路径
            #-Between=2020-08-15T14:34:43.132+08:00[Asia/Shanghai],2021-08-15T14:34:43.132+08:00[Asia/Shanghai]
              # 带cookie 传值 访问
           # - Cookie=userbane,lyy

        - id: payment_routh2 #payment_route # 路由的ID 没有固定规则，但要求唯一，建议配合服务名。
         # uri: http://localhost:8001  # 匹配后提供服务的路由地址。
          uri: lb://cloud-payment-service  # 匹配后提供服务的路由地址。
          filtes:
            - AddRequestParameter=X-Request-Id,1024 #过滤工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id值为1024.

          predicates:
            - Path=/payment/lb/**  # 断言，路径想匹配的进行路由。
            - After=2020-08-15T14:31:40.554+08:00[Asia/Shanghai]
           # - Cookie=usrename,lyy


eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    service-url:
      # true 表示向注册中心注册自己
      register-with-eureka: true
      fetch-registry: true

        # 设置 与eureka server 交互的地址查询服务和注册服务都需要依赖这个地址。
        # defaultZone: http://eureka7002.com:7002/eureka/
        # 单击就是自己
      defaultZone: http://eureka7001.com:7001/eureka
